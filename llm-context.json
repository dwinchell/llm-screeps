{
  "bot_name": "llm-screeps",
  "goal": "Economy-focused bot minimizing ticks to RCL.",
  "file_structure": "Flat, prefixed filenames (e.g., manager-spawning.js, role-harvester.js). No subdirectories due to server limitations.",
  "test_strategy": "Controlled tests by instructing the bot and verifying behavior in a high tick-rate local Screeps server.",
  "current_progress": [
    "Basic spawning and harvesting implemented.",
    "Harvester creeps collect energy and deposit into spawn/extensions.",
    "Energy income per tick logging implemented in main.js.",
    "Telemetry system implemented with automatic Memory cleanup.",
    "Creep lifecycle tracking added, including heartbeat and death detection.",
    "Harvester monitoring enhanced to track idle states and missing transfer targets."
  ],
  "most_important_files": [
      "main.js",
      "manager-spawning.js",
      "config-roles.js",
      "utils-logging.js",
      "role-harvester.js",
      "role-harvester-monitor.js",
      "utils-telemetry.js",
      "creep-lifecycle.js"
  ],
  "next_steps": [
    "Extend Creep.prototype to record telemetry events for every function call that requres an 'intent'.",
    "Implement a state machine utility to simplify role implementations",
    "Implement haulers to optimize energy transport."
  ],
  "ideas_backlog": [
    "Implement a spawning queue",
    "Optimize creep pathing for better efficiency.",
  ],
  "implementationConstraints": [
    "Never use the optional chaining (?.) syntax.",
    "Ensure telemetry data is structured for easy retrieval and cleanup."
  ],
  "designDecisions": [
    "Every role will record at least one telemetry event per tick, even if it is an idle event, or emitted by calling another module",
    "Haulers will use one move part"
  ]
}
